$directions: "T", "B", "L", "R", "X", "Y";
$props: "Padding", "Margin";

@each $direction in $directions {
    @for $i from 1 through 10 {
        @each $prop in $props {
            @if ($prop== "margin") {
                .margin-#{$direction}-#{$i} {
                    @if ($direction== "T") {
                        margin-top: $i * 1rem;
                    }
                    @if ($direction== "B") {
                        margin-bottom: $i * 1rem;
                    }
                    @if ($direction== "L") {
                        margin-left: $i * 1rem;
                    }
                    @if ($direction== "R") {
                        margin-right: $i * 1rem;
                    }
                    @if ($direction== "X") {
                        margin: 0 $i * 1rem;
                    }
                    @if ($direction== "Y") {
                        margin: $i * 1rem 0;
                    }
                }
            }
            @if ($prop== "padding") {
                .Padding-#{$direction}-#{$i} {
                    @if ($direction== "T") {
                        padding-top: $i * 1rem;
                    }
                    @if ($direction== "B") {
                        padding-bottom: $i * 1rem;
                    }
                    @if ($direction== "L") {
                        padding-left: $i * 1rem;
                    }
                    @if ($direction== "R") {
                        padding-right: $i * 1rem;
                    }
                    @if ($direction== "X") {
                        padding: 0 $i * 1rem;
                    }
                    @if ($direction== "Y") {
                        padding: $i * 1rem 0;
                    }
                }
            }
        }
    }
}


.svg-icon {
    width: 3.5rem;
    height: 3.5rem;
    fill: currentColor;
}

.hide_menu {
    overflow: hidden;
}

.bg--danger {
    background-color: $red_color !important;

    &, & > * {
        color: $white_color !important;
    }

    &:hover {
        background-color: $red_color_1 !important;
    }
}

.reset-btn, .reset-link {
    all: unset;
}

.pointer {
    cursor: pointer;
}

.linear_transition {
    transition: all .25s linear;
}

.main_content {
    margin: auto;
    border-radius: 15px;
    box-shadow: 0 0 15px $gray_color_1;
    @include flex(center, center, column);
    row-gap: 1.5rem;
    text-align: center;
    padding: 1.5rem 2.5rem;
}

.white_color {
    color: white;
}

input[type='file'] {
    all: unset;
}

select {
    border-radius: 2rem;
    width: 100%;
    background-color: $gray_color_1;
    appearance: none;
    border: none;
    padding: .5rem 2rem;
    margin: 0;
    //width: 150px;
    font-family: inherit;
    font-size: inherit;
    cursor: inherit;
    line-height: inherit;
}

.center {
    text-align: center;
}

.center_element {
    margin: 0 auto;
}

.buttons {
    width: 100%;
    display: flex;
    justify-content: space-between;
}

.error-message, .danger-text {
    color: $red_color;
}

.username-link {
    text-decoration: none;
    color: currentColor;
}

.color-gray {
    color: $gray_color;
}

.no-radius {
    border-radius: unset !important;
}

textarea {
    background-color: $gray_color_1;
    resize: vertical;
    width: 100%;
    border-radius: 1.5rem;
    padding: 1rem 1.5rem;
    font-family: inherit;
    font-size: inherit;
    border: none;
    height: 10rem;
}

.Fixed-FOOTER {
    position: absolute;
    width: 100%;
    inset: 0;
}

.styled-table {
    border-collapse: collapse;
    //margin: 25px 0;
    font-size: 0.9em;
    font-family: sans-serif;
    min-width: 400px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);

    & thead tr {
        background-color: $dark_blue_1;
        color: #ffffff;
        text-align: left;
    }

    th, td {
        padding: 12px 15px;
    }

    tbody tr {
        border-bottom: 1px solid #dddddd;
        text-align: left;

    }

    tbody tr:nth-of-type(even) {
        background-color: #f3f3f3;
    }

    tbody tr:last-of-type {
        border-bottom: 2px solid $dark_blue_1;
    }

}
.users{
    padding: 2.5rem 0;
    display: flex;
    justify-content: center;
    table {
        display: inline-block;
    }
}

.links-table {
    &> a{
        display: block;
    }
    display: flex;
    column-gap: 1.5rem;
}
